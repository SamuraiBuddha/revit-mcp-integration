version: '3.8'

services:
  # Core n8n workflow automation
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD:-changeme}
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://n8n:5678/
      - N8N_LOG_LEVEL=info
      - NODE_ENV=production
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n-workflows:/workflows
      - ./shared:/shared
    networks:
      - revit-mcp-network
    restart: unless-stopped

  # PostgreSQL for data persistence
  postgres:
    image: pgvector/pgvector:pg16
    container_name: postgres
    environment:
      - POSTGRES_USER=revit
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgrespassword}
      - POSTGRES_DB=revit_mcp
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - revit-mcp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U revit"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and real-time operations
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - revit-mcp-network
    command: redis-server --appendonly yes

  # Qdrant vector database for semantic search
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_storage:/qdrant/storage
    networks:
      - revit-mcp-network
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334

  # Neo4j for BIM relationship graphs
  neo4j:
    image: neo4j:5-community
    container_name: neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD:-neo4jpassword}
      - NEO4J_PLUGINS=["graph-data-science", "apoc"]
      - NEO4J_dbms_memory_pagecache_size=2G
      - NEO4J_dbms_memory_heap_max__size=2G
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - revit-mcp-network

  # Ollama for local LLM inference
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_models:/root/.ollama
    networks:
      - revit-mcp-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # MinIO for object storage (point clouds, scan data)
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minioadmin}
    volumes:
      - minio_data:/data
    networks:
      - revit-mcp-network
    command: server /data --console-address ":9001"

  # InfluxDB for time-series data (sensor readings, monitoring)
  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=building_metrics
      - INFLUXDB_ADMIN_USER=${INFLUXDB_ADMIN_USER:-admin}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_ADMIN_PASSWORD:-adminpassword}
    volumes:
      - influxdb_data:/var/lib/influxdb2
    networks:
      - revit-mcp-network

  # Grafana for visualization dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - revit-mcp-network
    depends_on:
      - influxdb
      - postgres

  # Jupyter for data analysis and ML model development
  jupyter:
    image: jupyter/tensorflow-notebook:latest
    container_name: jupyter
    ports:
      - "8888:8888"
    environment:
      - JUPYTER_ENABLE_LAB=yes
    volumes:
      - ./notebooks:/home/jovyan/work
      - ./models:/home/jovyan/models
      - ./shared:/home/jovyan/shared
    networks:
      - revit-mcp-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - revit-mcp-network
    depends_on:
      - n8n
      - grafana

  # Cesium terrain server for 3D visualization
  cesium-terrain:
    build:
      context: ./cesium-terrain
      dockerfile: Dockerfile
    container_name: cesium-terrain
    ports:
      - "8080:8080"
    volumes:
      - ./terrain-data:/data/tilesets/terrain
    networks:
      - revit-mcp-network

  # WebSocket server for real-time Revit communication
  revit-ws-bridge:
    build:
      context: ./revit-ws-bridge
      dockerfile: Dockerfile
    container_name: revit-ws-bridge
    ports:
      - "8765:8765"
    environment:
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://revit:${POSTGRES_PASSWORD:-postgrespassword}@postgres:5432/revit_mcp
    networks:
      - revit-mcp-network
    depends_on:
      - redis
      - postgres

  # ML model server for point cloud processing
  ml-server:
    build:
      context: ./ml-server
      dockerfile: Dockerfile
    container_name: ml-server
    ports:
      - "8501:8501"  # TensorFlow Serving
      - "8502:8502"  # REST API
    volumes:
      - ./models:/models
      - ./shared:/shared
    networks:
      - revit-mcp-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    environment:
      - CUDA_VISIBLE_DEVICES=0

volumes:
  n8n_data:
  postgres_data:
  redis_data:
  qdrant_storage:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  ollama_models:
  minio_data:
  influxdb_data:
  grafana_data:

networks:
  revit-mcp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
